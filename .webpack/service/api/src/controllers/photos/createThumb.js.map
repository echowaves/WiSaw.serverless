{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"source-map-support/register\"","webpack:///external \"babel-runtime/helpers/asyncToGenerator\"","webpack:///external \"babel-runtime/regenerator\"","webpack:///external \"aws-sdk\"","webpack:///external \"child_process\"","webpack:///external \"axios\"","webpack:///external \"fs\"","webpack:///external \"babel-runtime/core-js/object/keys\"","webpack:///./api/src/controllers/photos/createThumb.js"],"names":["event","context","cb","widths","record","Records","name","s3","object","key","includes","console","log","activateUrl","process","env","HOST","replace","put","bucket","S3","sourcePath","targetStream","createWriteStream","fileStream","getObject","Bucket","Key","createReadStream","pipe","on","forEach","size","tmpFileName","cmd","error","stdout","stderr","warn","info","fileBuffer","readFileSync","byteLength","putObject","ACL","Body","ContentType","err","res","main"],"mappings":"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","file":"api/src/controllers/photos/createThumb.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 23);\n","module.exports = require(\"source-map-support/register\");","module.exports = require(\"babel-runtime/helpers/asyncToGenerator\");","module.exports = require(\"babel-runtime/regenerator\");","module.exports = require(\"aws-sdk\");","module.exports = require(\"child_process\");","module.exports = require(\"axios\");","module.exports = require(\"fs\");","module.exports = require(\"babel-runtime/core-js/object/keys\");","import fs from 'fs'\nimport AWS from 'aws-sdk'\nimport axios from 'axios'\n\nimport { exec } from 'child_process'\n\n// eslint-disable-next-line import/prefer-default-export\nexport async function main(event, context, cb) {\n  // define all the thumbnails that we want\n  const widths = {\n    150: '-thumbnail 150x',\n  }\n\n  const record = event.Records[0];\n  const name = record.s3.object.key\n  // we only want to deal with originals\n  if (name.includes('-thumb')) {\n    console.log('thumbnail uploaded, activating image')\n\n    // activate image\n    const activateUrl = `${process.env.HOST}/photos/${name.replace('-thumb', '')}/activate`\n    // console.log({ activateUrl })\n    await axios.put(activateUrl)\n    cb(null, 'activating the image in DB')\n    return true\n  }\n\n  // get the prefix, and get the hash\n\n  console.log('record.s3.bucket.name:', record.s3.bucket.name)\n  console.log('record.s3.object.key:', record.s3.object.key)\n  // download the original to disk\n  const s3 = new AWS.S3()\n  const sourcePath = `/tmp/${name}`\n  const targetStream = fs.createWriteStream(sourcePath)\n  const fileStream = s3.getObject({\n    Bucket: record.s3.bucket.name,\n    Key: record.s3.object.key,\n  }).createReadStream()\n  fileStream.pipe(targetStream)\n\n  // when file is downloaded, start processing\n  fileStream.on('end', () => {\n    // resize to every configured size\n    Object.keys(widths).forEach((size) => {\n      const tmpFileName = `/tmp/${name}-thumb-${size}`\n      const cmd = `convert -auto-orient ${widths[size]} ${sourcePath} ${tmpFileName}`\n      console.log('Running: ', cmd)\n\n      exec(cmd, (error, stdout, stderr) => { // eslint-disable-line no-unused-vars\n        if (error) {\n          // the command failed (non-zero), fail\n          console.warn(`exec error: ${error}, stdout, stderr`)\n          cb('failed converting')\n          return false\n        }\n        // resize was succesfull, upload the file\n        console.info(`Resize to ${size} OK`)\n        const fileBuffer = fs.readFileSync(tmpFileName)\n        console.log('thumb size:', fileBuffer.byteLength)\n\n        try {\n          console.log('uploading image: ', `${name}-thumb`)\n          // await s3.putObject({\n          //   ACL: 'public-read',\n          //   Key: `${name}-thumb`,\n          //   Body: fileBuffer,\n          //   Bucket: record.s3.bucket.name,\n          //   ContentType: 'image/jpeg',\n          // })\n\n          s3.putObject({\n            ACL: 'public-read',\n            Key: `${name}-thumb`,\n            Body: fileBuffer,\n            Bucket: record.s3.bucket.name,\n            ContentType: 'image/jpeg',\n          }, (err, res) => {\n            if (err) {\n              console.log({ err })\n            }\n            // // activate image\n            // axios.put(`${process.env.HOST}/${name}/activate`)\n            console.log({ res })\n            console.log('done')\n          })\n          console.log('finished uploading')\n        } catch (err) {\n          console.log(`Unable to upload thumb ${name}`, err)\n        }\n        cb(null, 'success')\n        return true\n      })\n    })\n  })\n\n  cb(null, 'success everything')\n  return true\n}\n"],"sourceRoot":""}