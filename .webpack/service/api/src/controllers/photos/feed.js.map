{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"source-map-support/register\"","webpack:///external \"sequelize\"","webpack:///./config/consts.js","webpack:///./api/src/models/watcher.js","webpack:///./api/src/controllers/photos/feed.js","webpack:///external \"babel-runtime/core-js/json/stringify\"","webpack:///external \"moment\"","webpack:///external \"pg\"","webpack:///external \"pg-hstore\"","webpack:///external \"lambda-log\"","webpack:///./config/config.js","webpack:///./.env.sample.js","webpack:///./.env.test.js","webpack:///./.env.prod.js","webpack:///./api/src/models/photo.js"],"names":["dbConfig","log","options","debug","process","env","STAGE","DATABASE_URL","test","sequelize","Sequelize","logging","authenticate","then","console","catch","err","error","Watcher","Model","init","id","allowNull","autoIncrement","primaryKey","type","DataTypes","INTEGER","photoId","defaultValue","uuid","UUID","createdAt","DATE","updatedAt","watchedAt","main","byDate","forWatcher","forTextSearch","Op","event","context","callback","callbackWaitsForEmptyEventLoop","data","JSON","parse","body","location","response","statusCode","limit","offset","lat","coordinates","lng","point","fn","photos","Photo","findAll","where","active","attributes","include","col","order","length","status","daysAgo","batch","currentDate","gte","clone","subtract","lte","add","sort","a","b","pageNumber","pageLimit","model","required","subQuery","searchTerm","query","mapToModel","headers","devConfig","require","config","testConfig","prodConfig","module","exports","dev","username","DB_USERNAME","password","DB_PASSWORD","database","DB_DATABASE","host","DB_HOST","dialect","DB_DIALECT","prod","HOST","GEOMETRY","likes","commentsCount","BOOLEAN","getImgUrl","VIRTUAL","get","IMAGE_BUCKET","getThumbUrl","hasMany","foreignKey"],"mappings":"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","file":"api/src/controllers/photos/feed.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 4);\n","module.exports = require(\"source-map-support/register\");","module.exports = require(\"sequelize\");","import Sequelize from 'sequelize'\n// eslint-disable-next-line no-unused-vars\nimport pg from 'pg' // this is needed for initialization purpose, although we never user it directly\n// eslint-disable-next-line no-unused-vars\nimport pgHstore from 'pg-hstore' // the same as above\n\nimport log from 'lambda-log'\n\nimport * as dbConfig from './config'\n\nlog.options.debug = true;\n\nif ((process.env.STAGE || 'test') === 'test') {\n  process.env.DATABASE_URL = dbConfig.test.DATABASE_URL\n}\n\n// eslint-disable-next-line import/prefer-default-export\nexport const sequelize =\nnew Sequelize(process.env.DATABASE_URL, {\n  // disable logging; default: console.log\n  // logging: log.debug,\n  logging: false,\n  // operatorsAliases: Sequelize.Op, // use Sequelize.Op\n})\n\nsequelize\n  .authenticate()\n  .then(() => console.log('Connection to database has been established successfully.'))\n  .catch(err => console.error('Unable to connect to the database:', err))\n\n// export default sequelize\n","import { Model, DataTypes } from 'sequelize'\nimport { sequelize } from '../../../config/consts'\n\n// import Photo from './photo'\n\n\nexport default class Watcher extends Model {}\nWatcher.init({\n  id: {\n    allowNull: false,\n    autoIncrement: true,\n    primaryKey: true,\n    type: DataTypes.INTEGER,\n  },\n  photoId: {\n    type: DataTypes.INTEGER,\n    allowNull: false,\n    defaultValue: 0,\n  },\n  uuid: {\n    type: DataTypes.UUID,\n    allowNull: false,\n  },\n  createdAt: {\n    allowNull: false,\n    type: DataTypes.DATE,\n  },\n  updatedAt: {\n    allowNull: false,\n    type: DataTypes.DATE,\n  },\n  watchedAt: {\n    allowNull: false,\n    type: DataTypes.DATE,\n  },\n}, {\n  sequelize,\n})\n\n// Watcher.belongsTo(Photo)\n","import Sequelize from 'sequelize'\nimport moment from 'moment'\n\nimport { sequelize } from '../../../../config/consts'\n\nimport Photo from '../../models/photo'\nimport Watcher from '../../models/watcher'\n\n// const stringifyObject = require('stringify-object')\n\nconst { Op } = Sequelize\n\n// eslint-disable-next-line import/prefer-default-export\nexport async function main(event, context, callback) {\n  // Instruct the lambda to exit immediately\n  // and not wait for node event loop to be empty.\n  context.callbackWaitsForEmptyEventLoop = false // eslint-disable-line no-param-reassign\n\n  const data = JSON.parse(event.body)\n  // console.log({data})\n\n  const location = data ? data.location : null\n  if (!data || !location) {\n    console.log('setting status to 400')\n    const response = {\n      statusCode: 400,\n      body: JSON.stringify({ error: 'parameters missing' }),\n    }\n    callback(null, response)\n    return false\n  }\n\n  console.log('location:', location)\n\n  let limit = data ? data.limit : null\n  limit = 1000\n\n  let offset = data ? data.offset : null\n  if (!limit) {\n    limit = 100\n  }\n  if (!offset) {\n    offset = 0\n  }\n\n  const lat = location.coordinates[0]\n  const lng = location.coordinates[1]\n\n  const point = Sequelize.fn('ST_MakePoint', lat, lng)\n\n\n  // retrieve photos\n  let photos\n  try {\n    photos = await Photo.findAll({\n      where: { active: true },\n      attributes: {\n        include: [\n          [Sequelize.fn('ST_Distance', point, Sequelize.col('location')), 'distance'],\n          // [Sequelize.literal('(SELECT COUNT(\"Comments\") FROM \"Comments\"\n          // WHERE \"Comments\".\"photoId\" = \"Photo\".\"id\" and \"active\" = true)'), 'commentsCount'],\n        ],\n      },\n      // order: Sequelize.col('distance'),\n      order: [\n        ['id', 'DESC'],\n      ],\n      limit,\n      offset,\n    })\n    console.log('retrived photos:', photos.length)\n    // add img_url and thumb_url properties\n    // photos = dbPhotos.map((dbPhoto) => {\n    //   const photo = dbPhoto\n    //   photo.dataValues.img_url = `https://s3.amazonaws.com/${process.env.IMAGE_BUCKET}/${photo.id}`\n    //   photo.dataValues.thumb_url = `https://s3.amazonaws.com/${process.env.IMAGE_BUCKET}/${photo.id}-thumb`\n    //   // console.log({ photo })\n    //   return photo\n    // })\n    // console.log({ photos })\n  } catch (err) {\n    console.log('Unable to retrieve Photos feed', err)\n    const response = {\n      statusCode: 500,\n      body: JSON.stringify({ error: 'Unable to retrieve Photos feed' }),\n    }\n    callback(null, response)\n    return false\n  }\n\n  // Resond to request indicating the photo feed was created\n  const response = {\n    statusCode: 200,\n    body: JSON.stringify({ status: 'success', photos }),\n  }\n  callback(null, response)\n  return true\n}\n\n\n// eslint-disable-next-line import/prefer-default-export\nexport async function byDate(event, context, callback) {\n  // Instruct the lambda to exit immediately\n  // and not wait for node event loop to be empty.\n  context.callbackWaitsForEmptyEventLoop = false // eslint-disable-line no-param-reassign\n\n  const data = JSON.parse(event.body)\n  // console.log({ data })\n\n  const location = data ? data.location : null\n  const daysAgo = data ? (data.daysAgo || 0) : 0\n  const batch = data ? (data.batch || 0) : 0\n\n  console.log('location:', location)\n  console.log('daysAgo:', daysAgo)\n\n  if (!data || !location) {\n    console.log('setting status to 400')\n    const response = {\n      statusCode: 400,\n      body: JSON.stringify({ error: 'parameters missing' }),\n    }\n    callback(null, response)\n    return false\n  }\n\n\n  let limit = data ? data.limit : null\n  let offset = data ? data.offset : null\n  if (!limit) {\n    limit = 100\n  }\n  if (!offset) {\n    offset = 0\n  }\n\n  const lat = location.coordinates[0]\n  const lng = location.coordinates[1]\n\n  const point = Sequelize.fn('ST_MakePoint', lat, lng)\n\n  // retrieve photos\n  let photos\n\n  try {\n    // const utcDate = moment().startOf('day');\n    const currentDate = moment()\n\n    // if (utcDate.date() === currentDate.date()) {\n    //   daysAgo += 1\n    // }\n    // console.log('utcDate: ', utcDate)\n    console.log('currentDate: ', currentDate)\n    console.log('daysAgo: ', daysAgo)\n\n    photos = await Photo.findAll({\n      where: {\n        createdAt: {\n          [Op.gte]: currentDate.clone()\n            .subtract(daysAgo, 'days'),\n          [Op.lte]: currentDate.clone().add(1, 'days')\n            .subtract(daysAgo, 'days'),\n        },\n        active: true,\n      },\n      attributes: {\n        include: [\n          [Sequelize.fn('ST_Distance', point, Sequelize.col('location')), 'distance'],\n          // [Sequelize.fn('DATE', Sequelize.col('createdAt')), 'creationDate'],\n          // [Sequelize.literal('(SELECT COUNT(\"Comments\") FROM \"Comments\"\n          // WHERE \"Comments\".\"photoId\" = \"Photo\".\"id\" and \"active\" = true)'), 'commentsCount'],\n        ],\n      },\n      order: Sequelize.col('distance'),\n      limit,\n      offset,\n    })\n    console.log('retrived photos:', photos.length)\n    // add img_url and thumb_url properties\n    // photos = dbPhotos.map((dbPhoto) => {\n    //   const photo = dbPhoto\n    //   photo.dataValues.img_url = `https://s3.amazonaws.com/${process.env.IMAGE_BUCKET}/${photo.id}`\n    //   photo.dataValues.thumb_url = `https://s3.amazonaws.com/${process.env.IMAGE_BUCKET}/${photo.id}-thumb`\n    //   // console.log({ photo })\n    //   return photo\n    // })\n    // console.log({ photos })\n  } catch (err) {\n    console.log('Unable to retrieve Photos feed', err)\n    const response = {\n      statusCode: 500,\n      body: JSON.stringify({ error: 'Unable to retrieve Photos feed' }),\n    }\n    callback(null, response)\n    return false\n  }\n\n\n  // Resond to request indicating the photo feed was created\n  const response = {\n    statusCode: 200,\n    body: JSON.stringify({ status: 'success', batch, photos: photos.sort((a, b) => b.id - a.id) }),\n  }\n  callback(null, response)\n  return true\n}\n\n// eslint-disable-next-line import/prefer-default-export\nexport async function forWatcher(event, context, callback) {\n  // Instruct the lambda to exit immediately\n  // and not wait for node event loop to be empty.\n  context.callbackWaitsForEmptyEventLoop = false // eslint-disable-line no-param-reassign\n\n  const data = JSON.parse(event.body)\n\n  const pageNumber = data ? (data.pageNumber || 0) : 0\n  const limit = data ? (data.pageLimit || 100) : 100\n\n  const uuid = data ? data.uuid : null\n  const batch = data ? (data.batch || 0) : 0\n\n  // console.log({ data })\n\n  if (!data || !uuid) {\n    console.log('setting status to 400')\n    const response = {\n      statusCode: 400,\n      body: JSON.stringify({ error: 'parameters missing' }),\n    }\n    callback(null, response)\n    return false\n  }\n\n  const offset = limit * pageNumber\n\n  // retrieve photos\n  let photos\n  try {\n    photos = await Photo.findAll({\n      where: {\n        // uuid,\n        active: true,\n      },\n      include: [\n        {\n          model: Watcher,\n          required: true,\n          where: { uuid },\n          order: [[Watcher, 'watchedAt', 'DESC']],\n        },\n      ],\n      order: [[Watcher, 'watchedAt', 'DESC']],\n      limit,\n      offset,\n      subQuery: false,\n    })\n    console.log('retrived photos:', photos.length)\n  } catch (err) {\n    console.log('Unable to retrieve Photos feed', err)\n    const response = {\n      statusCode: 500,\n      body: JSON.stringify({ error: 'Unable to retrieve Photos feed' }),\n    }\n    callback(null, response)\n    return false\n  }\n\n  // Resond to request indicating the photo feed was created\n  const response = {\n    statusCode: 200,\n    body: JSON.stringify({ status: 'success', batch, photos }),\n  }\n  callback(null, response)\n  return true\n}\n\n// eslint-disable-next-line import/prefer-default-export\nexport async function forTextSearch(event, context, callback) {\n  // Instruct the lambda to exit immediately\n  // and not wait for node event loop to be empty.\n  context.callbackWaitsForEmptyEventLoop = false // eslint-disable-line no-param-reassign\n\n  const data = JSON.parse(event.body)\n\n  const pageNumber = data ? (data.pageNumber || 0) : 0\n  const limit = data ? (data.pageLimit || 25) : 25\n\n  const uuid = data ? data.uuid : null\n  const batch = data ? (data.batch || 0) : 0\n  const searchTerm = data ? data.searchTerm : null\n\n  // console.log(JSON.stringify(data))\n\n  if (!data || !uuid || !searchTerm || searchTerm.length < 2) {\n    console.log('setting status to 400')\n    const response = {\n      statusCode: 400,\n      body: JSON.stringify({ error: 'parameters missing' }),\n    }\n    callback(null, response)\n    return false\n  }\n\n  const offset = limit * pageNumber\n\n  // retrieve photos\n  let photos\n\n  try {\n    /* eslint-disable no-multi-str */\n    photos = await sequelize\n      .query(\n        `SELECT p.* \\\n          FROM \"Photos\" p where active = true and \"id\" in ( \\\n          SELECT \"photoId\" \\\n          FROM \"Recognitions\" \\\n          WHERE \\\n          to_tsvector('English', \"metaData\"::text) @@ plainto_tsquery('English', '${searchTerm}') \\\n        UNION \\\n          SELECT \"photoId\" \\\n          FROM \"Comments\" \\\n          WHERE \\\n          active = true and to_tsvector('English', \"comment\"::text) @@ plainto_tsquery('English', '${searchTerm}') \\\n        ) \\\n        order by id desc \\\n        limit ${limit} offset ${offset}`,\n        // { replacements: { searchTerm, limit, offset }, type: sequelize.QueryTypes.SELECT },\n        {\n          model: Photo,\n          mapToModel: true, // pass true here if you have any mapped fields\n        },\n      )\n\n    console.log('retrived photos:', photos.length)\n    // console.log(stringifyObject(photos, {\n    //   indent: '  ',\n    //   singleQuotes: false,\n    // }))\n  } catch (err) {\n    console.log('Unable to retrieve Photos feed')\n    console.log(JSON.stringify(err))\n    const response = {\n      statusCode: 500,\n      body: JSON.stringify({ error: 'Unable to retrieve Photos feed' }),\n    }\n    callback(null, response)\n    return false\n  }\n\n  // Respond to request indicating the photo feed was created\n  const response = {\n    statusCode: 200,\n    headers: {\n      'Access-Control-Allow-Origin': '*', // Required for CORS support to work\n      'Access-Control-Allow-Credentials': false, // Required for cookies, authorization headers with HTTPS\n      'Access-Control-Allow-Headers': 'Origin, X-Requested-With, Content-Type, Accept',\n      'Access-Control-Allow-Methods': 'OPTIONS,POST,GET',\n    },\n    body: JSON.stringify({ status: 'success', batch, photos }),\n  }\n  callback(null, response)\n  return true\n}\n","module.exports = require(\"babel-runtime/core-js/json/stringify\");","module.exports = require(\"moment\");","module.exports = require(\"pg\");","module.exports = require(\"pg-hstore\");","module.exports = require(\"lambda-log\");","const devConfig = require('../.env.sample').config()\nconst testConfig = require('../.env.test').config()\nconst prodConfig = require('../.env.prod').config()\n\nmodule.exports = {\n  dev: {\n    username: devConfig.DB_USERNAME,\n    password: devConfig.DB_PASSWORD,\n    database: devConfig.DB_DATABASE,\n    host: devConfig.DB_HOST,\n    dialect: devConfig.DB_DIALECT,\n    DATABASE_URL: devConfig.DATABASE_URL,\n  },\n  test: {\n    username: testConfig.DB_USERNAME,\n    password: testConfig.DB_PASSWORD,\n    database: testConfig.DB_DATABASE,\n    host: testConfig.DB_HOST,\n    dialect: testConfig.DB_DIALECT,\n    DATABASE_URL: testConfig.DATABASE_URL,\n  },\n  prod: {\n    username: prodConfig.DB_USERNAME,\n    password: prodConfig.DB_PASSWORD,\n    database: prodConfig.DB_DATABASE,\n    host: prodConfig.DB_HOST,\n    dialect: prodConfig.DB_DIALECT,\n    DATABASE_URL: prodConfig.DATABASE_URL,\n  },\n}\n","module.exports.config = () => {\n   return {\n       HOST: \"https://sampleapi.wisaw.com\",\n\n       DB_USERNAME: \"root\",\n       DB_PASSWORD: \"root\",\n       DB_DATABASE: \"ew_sample\",\n       DB_HOST: \"localhost\",\n       DB_DIALECT: \"postgres\",\n        get DATABASE_URL() {\n          return this.DB_DIALECT + \"://\" + this.DB_USERNAME + \":\" + this.DB_PASSWORD + \"@\" + this.DB_HOST + \":5432/\" + this.DB_DATABASE\n        }\n    };\n}\n","module.exports.config = () => ({\n  HOST: 'https://testapi.wisaw.com',\n\n  DB_USERNAME: 'awsroot',\n  DB_PASSWORD: 'Un4dLKJjndnrkjnskCCFCdckjsndfkjm',\n  DB_DATABASE: 'wisaw_test',\n  DB_HOST: 'wisaw-test.cbaw0b5dcxjh.us-east-1.rds.amazonaws.com',\n  DB_DIALECT: 'postgres',\n  get DATABASE_URL() {\n    return `${this.DB_DIALECT}://${this.DB_USERNAME}:${this.DB_PASSWORD}@${this.DB_HOST}:5432/${this.DB_DATABASE}`\n  },\n})\n","module.exports.config = () => ({\n  HOST: 'https://api.wisaw.com',\n\n  DB_USERNAME: 'awsroot',\n  DB_PASSWORD: 'h5AGk6eoAdkj234bfbusd87hUn4kCCFCm',\n  DB_DATABASE: 'wisaw_prod',\n  DB_HOST: 'wisaw-prod.cbaw0b5dcxjh.us-east-1.rds.amazonaws.com',\n  DB_DIALECT: 'postgres',\n  get DATABASE_URL() {\n    return `${this.DB_DIALECT}://${this.DB_USERNAME}:${this.DB_PASSWORD}@${this.DB_HOST}:5432/${this.DB_DATABASE}`\n  },\n})\n","import { Model, DataTypes } from 'sequelize'\nimport { sequelize } from '../../../config/consts'\n\nimport Watcher from './watcher'\n\nexport default class Photo extends Model {}\n\nPhoto.init({\n  id: {\n    allowNull: false,\n    autoIncrement: true,\n    primaryKey: true,\n    type: DataTypes.INTEGER,\n  },\n  uuid: {\n    type: DataTypes.UUID,\n    allowNull: false,\n  },\n  location: {\n    type: DataTypes.GEOMETRY('POINT'),\n    allowNull: false,\n  },\n  likes: {\n    allowNull: false,\n    type: DataTypes.INTEGER,\n  },\n  commentsCount: {\n    allowNull: false,\n    type: DataTypes.INTEGER,\n    defaultValue: 0,\n  },\n  createdAt: {\n    allowNull: false,\n    type: DataTypes.DATE,\n  },\n  updatedAt: {\n    allowNull: false,\n    type: DataTypes.DATE,\n  },\n  active: {\n    allowNull: false,\n    type: DataTypes.BOOLEAN,\n    defaultValue: false,\n  },\n  getImgUrl: {\n    type: DataTypes.VIRTUAL,\n    get() {\n      return `https://s3.amazonaws.com/${process.env.IMAGE_BUCKET}/${this.id}`\n    },\n  },\n  getThumbUrl: {\n    type: DataTypes.VIRTUAL,\n    get() {\n      return `https://s3.amazonaws.com/${process.env.IMAGE_BUCKET}/${this.id}-thumb`\n    },\n  },\n}, {\n  sequelize,\n})\n\nPhoto.hasMany(Watcher, { foreignKey: 'photoId' })\n"],"sourceRoot":""}